chapter 39 "QCS: Final notes"

* Remember that QCS commands work on objects, not files. To
load a file into memory, use the update command. To reload an
already existing object, like a cloned orc or a book, use
the reload command. To use modify, delete, and add, you have
to specify a cloned object that is on you or in your environment.

    I think you're getting the idea of how this works. Here's 
an example of armor creation:

%^GREEN%^create armor jeans%^RESET%^

%^GREEN%^modify jeans id%^RESET%^

%^GREEN%^pants%^RESET%^

%^GREEN%^trousers%^RESET%^

%^GREEN%^.%^RESET%^

%^GREEN%^modify jeans short a pair of denim jeans%^RESET%^
 
%^GREEN%^modify jeans  long Worn jeans, frayed and stained.%^RESET%^

%^GREEN%^modify jeans adj%^RESET%^

%^GREEN%^pair of%^RESET%^

%^GREEN%^denim%^RESET%^

%^GREEN%^frayed%^RESET%^

%^GREEN%^worn%^RESET%^

%^GREEN%^stained%^RESET%^

%^GREEN%^.%^RESET%^


    To know what directives QCS can change on an object, type:

%^GREEN%^help modify%^RESET%^

    This provides a list of modifiable things and the directives
that can be modified on them. 

    Ultimately the Quick Creation System generates LPC code, so
you'll want to review the earlier chapters of this handbook to
get a base of understanding of the code that comprises your new
creations.

Some notes and tips:

* The SetNoCondition directive makes it so an item does not report
  its physical status when examined. Weapons and armor wear down in
  combat, and most objects let you know their condition when you
  examine them. However, in some cases (a sandwich for example) 
  this is inappropriate, so the SetNoCondition directive may be
  useful.

* Doors aren't like normal objects. They have to be modified *twice*.
  Once for each side of the door. If this sounds unnecessarily 
  tedious, remember that a door leading south is also a door
  leading north from the other room.

* Doors generally are not visible in the same way that regular
  objects are. To make a door especially obvious and noticeable,
  do something like:
%^GREEN%^modify door sethiddendoor 0%^RESET%^

* SetCurrency is for adding money to NPC's. SetMoney is for adding
  money to non-living containers (bags, etc).

* Item subtypes are listed in /include. To know what kinds of vendors 
  are available, for example, look in /include/vendor_types.h

* Books need a "source directory", which must contain one file per
  chapter. The SetSource for this manual, for example, is /doc/manual
  The first line of each file must follow the same format as
  the files you see in /doc/manual

* SetObviousExits is usually no longer needed: rooms report
  obvious exits automatically. However, if you don't want an exit
  to show up by default, use the SetObviousExits directive 
  to specify only those that you want seen. This will override the
  room's default exit display.



